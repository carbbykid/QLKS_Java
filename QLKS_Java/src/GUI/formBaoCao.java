/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmBaoCao.java
 *
 * Created on Dec 10, 2011, 8:42:31 AM
 */
package GUI;

import Common.BCThang;
import Common.BCThangControl;
import Common.CTBCThang;
import Common.CTBCThangControl;
import Common.HoaDonControl;
import Common.LoaiPhongControl;
import Common.PhieuThueControl;
import Common.PhongControl;
import java.math.RoundingMode;
import java.rmi.Naming;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sql.rowset.WebRowSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Restart
 */
public class formBaoCao extends javax.swing.JFrame {

    private long TongTien = 0, _TongTien = 0;
    private long TienDV = 0, _TienDV = 0;
    private String MaBC = null;
    private int i = 1;
    /** Creates new form frmBaoCao */
    public formBaoCao() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        ycNam = new com.toedter.calendar.JYearChooser();
        mcThang = new com.toedter.calendar.JMonthChooser();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDoanhThuLoaiPhong = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        lbTienPhong = new javax.swing.JLabel();
        lbTienDV = new javax.swing.JLabel();
        lbDoanhThu = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnLapBaoCao = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnBCThang = new javax.swing.JButton();
        btnBCNam = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Báo Cáo Doanh Thu");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Chọn Tháng/Năm"));

        ycNam.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        mcThang.setOpaque(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mcThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ycNam, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mcThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ycNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết báo cáo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        jtDoanhThuLoaiPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Loại Phòng", "Tên Loại Phòng", "Tiền Phòng", "Tiền DV", "Doanh Thu", "Tỷ Lệ (%)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDoanhThuLoaiPhong.setEnabled(false);
        jtDoanhThuLoaiPhong.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtDoanhThuLoaiPhong);
        if (jtDoanhThuLoaiPhong.getColumnModel().getColumnCount() > 0) {
            jtDoanhThuLoaiPhong.getColumnModel().getColumn(0).setPreferredWidth(0);
            jtDoanhThuLoaiPhong.getColumnModel().getColumn(1).setPreferredWidth(0);
            jtDoanhThuLoaiPhong.getColumnModel().getColumn(2).setPreferredWidth(0);
            jtDoanhThuLoaiPhong.getColumnModel().getColumn(6).setPreferredWidth(0);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Doanh thu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Tiền Phòng:");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 32, -1, -1));

        jLabel3.setText("Tiền Dịch Vụ:");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 32, -1, -1));

        jLabel1.setText("Doanh Thu:");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 32, -1, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel5.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 22, -1, 30));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel5.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 22, -1, 30));

        lbTienPhong.setText(".......");
        jPanel5.add(lbTienPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 32, -1, -1));

        lbTienDV.setText("......");
        jPanel5.add(lbTienDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 32, -1, -1));

        lbDoanhThu.setText("......");
        jPanel5.add(lbDoanhThu, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 32, -1, -1));

        jLabel4.setText("VNĐ");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 32, -1, -1));

        jLabel5.setText("VNĐ");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 32, -1, -1));

        jLabel6.setText("VNĐ");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 32, 30, -1));

        btnLapBaoCao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bill.png"))); // NOI18N
        btnLapBaoCao.setText("Lập báo cáo");
        btnLapBaoCao.setBorder(null);
        btnLapBaoCao.setContentAreaFilled(false);
        btnLapBaoCao.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bill2.png"))); // NOI18N
        btnLapBaoCao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLapBaoCaoActionPerformed(evt);
            }
        });

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Printer.png"))); // NOI18N
        btnPrint.setText("Print");
        btnPrint.setBorder(null);
        btnPrint.setContentAreaFilled(false);
        btnPrint.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Printer2.png"))); // NOI18N
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(null);
        btnXoa.setContentAreaFilled(false);
        btnXoa.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Delete2.png"))); // NOI18N
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnBCThang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/month.png"))); // NOI18N
        btnBCThang.setText("Báo Tháng");
        btnBCThang.setBorder(null);
        btnBCThang.setContentAreaFilled(false);
        btnBCThang.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/month2.png"))); // NOI18N
        btnBCThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBCThangActionPerformed(evt);
            }
        });

        btnBCNam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/year.png"))); // NOI18N
        btnBCNam.setText("Báo Cáo Năm");
        btnBCNam.setBorder(null);
        btnBCNam.setContentAreaFilled(false);
        btnBCNam.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/year2.png"))); // NOI18N
        btnBCNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBCNamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(btnBCThang)
                        .addGap(34, 34, 34)
                        .addComponent(btnBCNam))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnXoa)
                        .addGap(106, 106, 106)
                        .addComponent(btnLapBaoCao)
                        .addGap(102, 102, 102)
                        .addComponent(btnPrint)
                        .addGap(336, 336, 336)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBCThang)
                            .addComponent(btnBCNam))
                        .addGap(26, 26, 26)))
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrint)
                    .addComponent(btnXoa)
                    .addComponent(btnLapBaoCao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1072, 582));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

      private void DocBaoCao() {
        try{
            BCThangControl bctc = (BCThangControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/BCThangControl");
            CTBCThangControl ctbctc = (CTBCThangControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/CTBCThangControl");
            LoaiPhongControl lpc = (LoaiPhongControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/LoaiPhongControl");
            WebRowSet wrs1 = bctc.BCThang_GetById(this.MaBC);
            wrs1.next();
            this.lbDoanhThu.setText(wrs1.getString("DoanhThu").replace(".0000", ""));
            this.lbTienDV.setText(wrs1.getString("TienDV").replace(".0000", ""));
            this.lbTienPhong.setText(String.valueOf(Long.parseLong(this.lbDoanhThu.getText())-Long.parseLong(this.lbTienDV.getText())));
            WebRowSet wrs2 = ctbctc.CTBCThang_Top("", "MaBC = '" +this.MaBC+ "'", "");
            DefaultTableModel model = (DefaultTableModel) this.jtDoanhThuLoaiPhong.getModel();
            model.getDataVector().removeAllElements();
            String[] tableColumnsName = {"STT","Mã Loại Phòng", "Tên Loại Phòng", "Tiền Phòng", "Tiền DV", "Doanh Thu", "Tỷ Lệ "};
            model.setColumnIdentifiers(tableColumnsName);
            Vector dataRow;
            while(wrs2.next())
            {
                dataRow = new Vector();
                dataRow.add(wrs2.getRow());
                dataRow.add(wrs2.getObject("MaLoaiPhong"));
                WebRowSet wrs3 = lpc.LoaiPhong_GetById(wrs2.getString("MaLoaiPhong"));
                wrs3.next();
                dataRow.add(wrs3.getObject("TenLoaiPhong"));
                dataRow.add(String.valueOf(Long.parseLong(wrs2.getObject("DoanhThu").toString().replace(".0000", ""))-Long.parseLong(wrs2.getObject("TienDV").toString().replace(".0000", ""))));
                dataRow.add(wrs2.getObject("TienDV").toString().replace(".0000", ""));
                dataRow.add(wrs2.getObject("DoanhThu").toString().replace(".0000", ""));
                DecimalFormat df=new DecimalFormat("0.000");
                df.setRoundingMode(RoundingMode.HALF_DOWN); 
                dataRow.add(df.format((Double.parseDouble(wrs2.getObject("DoanhThu").toString().replace(".0000", ""))/Double.parseDouble(wrs1.getObject("DoanhThu").toString().replace(".0000", "")))*100));
                model.addRow(dataRow);
            }
        }
        catch(Exception e)
        {
            
        }
    }
    
private void btnLapBaoCaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLapBaoCaoActionPerformed
// TODO add your handling code here:
    try{
        BCThangControl bctc = (BCThangControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/BCThangControl"); 
        CTBCThangControl ctbctc = (CTBCThangControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/CTBCThangControl");
        CTBCThang ctbct = new CTBCThang();
        BCThang bct = new BCThang();
        bct.MaBC = null;
        bct.Thang = String.valueOf(this.mcThang.getMonth()+1);
        bct.Nam = String.valueOf(ycNam.getValue());
        bct.DoanhThu = this.lbDoanhThu.getText();
        bct.TienDV = this.lbTienDV.getText();
        if(btnLapBaoCao.getText().equals("Lập báo cáo"))
        {
            if(bctc.BCThang_Insert(bct))
            {
                WebRowSet wrs = bctc.BCThang_Top("1", "", "MaBC DESC");
                if(wrs.size()>0)
                {
                    wrs.next();
                    ctbct.MaBC = wrs.getString("MaBC");
                    for(int i=0; i< this.jtDoanhThuLoaiPhong.getRowCount(); i++)
                    {
                        ctbct.MaLoaiPhong = this.jtDoanhThuLoaiPhong.getValueAt(i, 1).toString();
                        ctbct.TienDV = this.jtDoanhThuLoaiPhong.getValueAt(i, 4).toString();
                        ctbct.DoanhThu = this.jtDoanhThuLoaiPhong.getValueAt(i, 5).toString();
                        ctbctc.CTBCThang_Insert(ctbct);
                    }
                }
                JOptionPane.showMessageDialog(this, "Lập báo cáo thành công !!");
                this.btnLapBaoCao.setVisible(false);
                btnXoa.setVisible(true);
            }
        }
        else
        {
            if(JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn cập nhật lại chứ ?", "Question",JOptionPane.YES_NO_OPTION)!=1)
            {
                bct.MaBC = this.MaBC;
                ctbct.MaBC = this.MaBC;
                if(bctc.BCThang_Update(bct))
                {
                    for(int i=0; i< this.jtDoanhThuLoaiPhong.getRowCount(); i++)
                    {
                        ctbct.MaLoaiPhong = this.jtDoanhThuLoaiPhong.getValueAt(i, 1).toString();
                        ctbct.TienDV = this.jtDoanhThuLoaiPhong.getValueAt(i, 4).toString();
                        ctbct.DoanhThu = this.jtDoanhThuLoaiPhong.getValueAt(i, 5).toString();
                        ctbctc.CTBCThang_Update(ctbct);
                    }
                    JOptionPane.showMessageDialog(this, "Cập nhật báo cáo thành công !!");
//                    this.btnLapBaoCao.setEnabled(false);
                    this.btnLapBaoCao.setVisible(false);
                }
            }
        }
    }
    catch(Exception e)
    {
    }
}//GEN-LAST:event_btnLapBaoCaoActionPerformed

private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
// TODO add your handling code here:
    try{
        BCThangControl bctc = (BCThangControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/BCThangControl");
        CTBCThangControl ctbctc = (CTBCThangControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/CTBCThangControl");
        if(JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa báo cáo chứ ?", "Question",JOptionPane.YES_NO_OPTION)!=1)
        {
            ctbctc.CTBCThang_Delete(this.MaBC);
            bctc.BCThang_Delete(this.MaBC);
            this.lbTienDV.setText("");
            this.lbDoanhThu.setText("");
            this.lbTienPhong.setText("");
            JOptionPane.showMessageDialog(this, "Xóa báo cáo thành công !!");
            this.btnXoa.setVisible(false);
            btnLapBaoCao.setVisible(true);
            btnPrint.setVisible(false);
            DefaultTableModel model = (DefaultTableModel) this.jtDoanhThuLoaiPhong.getModel();
            for (int i = model.getRowCount() - 1; i >= 0; i--) {
                    model.removeRow(i);
            }
        }
    }
    catch(Exception e)
    {
        
    }
}//GEN-LAST:event_btnXoaActionPerformed

private void btnBCThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBCThangActionPerformed
// TODO add your handling code here:
    this._TienDV = 0;
    this._TongTien = 0;
    this.TienDV = 0;
    this.TongTien = 0;
    i = 1;
    try{
        if(this.KiemTraTrungBaoCaoThang())
        {
    //        this.btnLapBaoCao.setText("Cập nhật báo cáo");
            if(JOptionPane.showConfirmDialog(this, "Báo cáo đã tồn tại. Bạn có muốn lấy báo cáo lên không?\n---========--- YES-Lấy lên | NO-Lập lại ---========---", "Question",JOptionPane.YES_NO_OPTION)!=1)
            {
                    DocBaoCao();
    //                this.btnLapBaoCao.setEnabled(false);
    //                this.btnPrint.setEnabled(true);
                    this.btnLapBaoCao.setVisible(false);
                    this.btnPrint.setVisible(true);
                    this.btnXoa.setVisible(true);
                    return;
            }
            else
            {
                this.btnLapBaoCao.setText("Cập nhật báo cáo");
    //            this.btnLapBaoCao.setEnabled(true);
    //            this.btnPrint.setEnabled(true);
                this.btnLapBaoCao.setVisible(true);
                this.btnPrint.setVisible(true);
                this.btnXoa.setVisible(false);
            }

        }
    //    else
    //    {
    //        this.btnLapBaoCao.setText("Lập báo cáo");
    //        this.btnLapBaoCao.setEnabled(true);
    //        this.btnPrint.setEnabled(true);
    //    }
        Date today=new Date(System.currentTimeMillis()); 
        if(this.ycNam.getValue()> (today.getYear()+1900) || (this.mcThang.getMonth()>today.getMonth() && this.ycNam.getValue() == today.getYear()))
        {
            JOptionPane.showMessageDialog(this, "Vượt quá thời gian hiện tại. Chọn lại thời gian !!");
            DefaultTableModel model = (DefaultTableModel) this.jtDoanhThuLoaiPhong.getModel();
            for (int i = model.getRowCount() - 1; i >= 0; i--) {
                    model.removeRow(i);
            }
            this.lbTienDV.setText("");
            this.lbTienPhong.setText("");
            this.lbDoanhThu.setText("");
    //        this.btnLapBaoCao.setEnabled(false);
    //        this.btnPrint.setEnabled(false);
            this.btnLapBaoCao.setVisible(false);
            this.btnPrint.setVisible(false);
            this.btnXoa.setVisible(false);
            return;
        }
        else
        {
            if(this.TinhTyLe())
            {
                this.ThongTinBaoCao();
                this.lbTienDV.setText(String.valueOf(this._TienDV));
                this.lbTienPhong.setText(String.valueOf(this._TongTien-this._TienDV));
                this.lbDoanhThu.setText(String.valueOf(this._TongTien));
    //            this.btnLapBaoCao.setEnabled(true);
    //            this.btnPrint.setEnabled(true);
                this.btnLapBaoCao.setVisible(true);
                this.btnPrint.setVisible(true);
                this.btnXoa.setVisible(false);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Không tồn tại hóa đơn trong tháng.\nXin vui lòng lập hóa đơn trước khi lập báo cáo.");
                DefaultTableModel model = (DefaultTableModel) this.jtDoanhThuLoaiPhong.getModel();
                for (int i = model.getRowCount() - 1; i >= 0; i--) {
                    model.removeRow(i);
                }
                this.lbTienDV.setText("");
                this.lbTienPhong.setText("");
                this.lbDoanhThu.setText("");
    //            this.btnLapBaoCao.setEnabled(false);
    //            this.btnPrint.setEnabled(false);
                this.btnLapBaoCao.setVisible(false);
                this.btnPrint.setVisible(false);
                this.btnXoa.setVisible(false);
                return;
            }
        }
    }
    catch(Exception e){}
    
}//GEN-LAST:event_btnBCThangActionPerformed

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
    this.btnPrint.setVisible(false);
    this.btnLapBaoCao.setVisible(false);
    this.btnXoa.setVisible(false);
}//GEN-LAST:event_formWindowOpened

private WebRowSet KiemTraBCNam()
{
    Date today=new Date(System.currentTimeMillis()); 
    if(this.ycNam.getYear()> today.getYear()+1900)
    {
        JOptionPane.showMessageDialog(this, "Thời gian không hợp lệ");
        return null;
    }
    else
    {
        try{
            BCThangControl bctc = (BCThangControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/BCThangControl");
            WebRowSet wrs = bctc.BCThang_Top("", "Nam = '" +this.ycNam.getYear()+ "'", "");
            if(wrs.size()>0)
                return wrs;
            else
            {
                JOptionPane.showMessageDialog(this, "Không có báo cáo tháng nào.\nBạn phải lập báo cáo tháng trước khi lập báo cáo năm.");
                return null;
            }
        }
        catch(Exception e)
        {
            return null;
        }
    }
}

private void btnBCNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBCNamActionPerformed
// TODO add your handling code here:
    this._TongTien = 0;
    this._TienDV = 0;
    i = 2;
    try{
        WebRowSet wrs = this.KiemTraBCNam();
//        BCThangControl bctc = (BCThangControl)Naming.lookup("rmi://localhost:1308/BCThangControl");
        if(wrs != null)
        {
            DefaultTableModel model = (DefaultTableModel) this.jtDoanhThuLoaiPhong.getModel();
            model.getDataVector().removeAllElements();
            Vector dataRow;
            String[] tableColumnsName = {"STT","Tháng", "Tiền Phòng", "Tiền DV", "Doanh Thu", "Tỷ Lệ (%)"};
            model.setColumnIdentifiers(tableColumnsName);
            while(wrs.next())
            {
                this._TienDV += Long.parseLong(wrs.getObject("TienDV").toString().replace(".0000", ""));
                this._TongTien += Long.parseLong(wrs.getObject("DoanhThu").toString().replace(".0000", ""));
            }
            this.lbDoanhThu.setText(String.valueOf(this._TongTien));
            this.lbTienDV.setText(String.valueOf(this._TienDV));
            this.lbTienPhong.setText(String.valueOf(this._TongTien-this._TienDV));
            wrs = this.KiemTraBCNam();
            while(wrs.next())
            {
                dataRow = new Vector();
                dataRow.add(wrs.getRow());
                dataRow.add(wrs.getObject("Thang"));
//                dataRow.add(wrs.getObject(String.valueOf(Long.parseLong(wrs.getObject("DoanhThu").toString().replace(".0000", ""))- Long.parseLong(wrs.getObject("TienDV").toString().replace(".0000", "")))));
                dataRow.add(String.valueOf(Long.parseLong(wrs.getObject("DoanhThu").toString().replace(".0000", ""))-Long.parseLong(wrs.getObject("TienDV").toString().replace(".0000", ""))));
                dataRow.add(wrs.getObject("TienDV"));
                dataRow.add(wrs.getObject("DoanhThu"));
                DecimalFormat df=new DecimalFormat("0.000");
                df.setRoundingMode(RoundingMode.HALF_DOWN); 
                dataRow.add(df.format((Long.parseLong(wrs.getObject("DoanhThu").toString().replace(".0000", ""))/this._TongTien)*100));
//                dataRow.add((String.valueOf((Long.parseLong(wrs.getObject("DoanhThu").toString().replace(".0000", ""))/this._TongTien)*100)));
                model.addRow(dataRow);
            }
            this._TongTien = 0;
            this._TienDV = 0;
            this.btnPrint.setVisible(true);
            btnXoa.setVisible(false);
        }
    }
    catch(Exception e)
    {
        
    }
}//GEN-LAST:event_btnBCNamActionPerformed

private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
// TODO add your handling code here:
    frmMain._main.setVisible(true);
    frmMain._main.setFocusable(true);
}//GEN-LAST:event_formWindowClosed

private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed

    try {
            // TODO add your handling code here:
            if(i ==  1)
            {
                String html = "";//<meta http-equiv=Content-Type content='text/html; charset=utf8'>";
               // html += "<RIGHT>CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM</BR>----------Ðộc lập - Tự do - Hạnh phúc-----------</LEFT>";
                html += "<CENTER><h2>BÁO CÁO DOANH THU THEO THÁNG</h2>"; 
                html += "<b>Tháng : </b>" + String.valueOf(this.mcThang.getMonth()+1);
                html += "&nbsp;&nbsp;&nbsp<b>Năm : </b>" + ycNam.getYear() + "<BR>";
                html += "CHI TIẾT BÁO CÁO";
                String footer ="";
                footer += "<b>Tiền phòng : </b>" + lbTienPhong.getText() + " VNĐ<br>";
                footer += "&nbsp;&nbsp;&nbsp<b>Tiền dịch vụ : </b>" + lbTienDV.getText() + " VNĐ<br>";
                footer += "&nbsp;&nbsp;&nbsp<b>Tổng doanh thu : </b>" + lbDoanhThu.getText() + " VNĐ<br>";
                BaoCao bc = new BaoCao();
                bc.baocao(jtDoanhThuLoaiPhong,html,footer,"400");
            }
            else if(i ==  2)
            {
                String html1 = "";//<meta http-equiv=Content-Type content='text/html; charset=utf8'>";
                //html1 += "<LEFT>CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM</BR>----------Ðộc lập - Tự do - Hạnh phúc-----------</LEFT>";
                html1 += "<CENTER><h2>BÁO CÁO DOANH THU THEO NĂM</h2>"; 
                html1 += "&nbsp;&nbsp;&nbsp<b>Năm : </b>" + ycNam.getYear();
                
                String footer ="";
                footer += "<b>Tiền phòng : </b>" + lbTienPhong.getText() + " VNĐ<br>";
                footer += "&nbsp;&nbsp;&nbsp<b>Tiền dịch vụ : </b>" + lbTienDV.getText() + " VNĐ<br>";
                footer += "&nbsp;&nbsp;&nbsp<b>Tổng doanh thu : </b>" + lbDoanhThu.getText() + " VNĐ<br>";
                BaoCao bc = new BaoCao();
                bc.baocao(jtDoanhThuLoaiPhong,html1,footer,"400");
            }
        } catch (Exception ex) {
            Logger.getLogger(formBaoCao.class.getName()).log(Level.SEVERE, null, ex);
        }

    // TODO add your handling code here:

    // TODO add your handling code here:
}//GEN-LAST:event_btnPrintActionPerformed

    private boolean KiemTraTrungBaoCaoThang()
    {
        try{
            BCThangControl bctc = (BCThangControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/BCThangControl");
            WebRowSet wrs = bctc.BCThang_Top("", "Thang = '" +String.valueOf(this.mcThang.getMonth()+1)+ "' AND Nam = '" +String.valueOf(this.ycNam.getValue())+ "'", "");
            if(wrs.size()>0)
            {
                wrs.next();
                this.MaBC = wrs.getString("MaBC");
                return true;
            }
            else
                return false;
        }
        catch(Exception e)
        {
            return false;
        }
    }
    private boolean TinhTyLe()
    {
        this._TongTien = 0;
        this._TienDV = 0;
        try{
            HoaDonControl hdc = (HoaDonControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/HoaDonControl");
            WebRowSet wrs = hdc.HoaDon_Top("", " year(NgayLap)= '"+String.valueOf(this.ycNam.getValue())+ "' AND month(NgayLap)= '"+String.valueOf(this.mcThang.getMonth()+1)+"'", "");
            if(wrs.size()>0)
            {
                while(wrs.next())
                {
                    this._TongTien += Long.parseLong(wrs.getObject("TongTien").toString().replace(".0000", ""));
                    this._TienDV += Long.parseLong(wrs.getObject("TienDV").toString().replace(".0000", ""));
                }
                return true;
            }
            return false;
        }
        catch(Exception e)
        {
            return false;
        }
    }
    private void ThongTinBaoCao()
    {
        try{
            DefaultTableModel model = (DefaultTableModel) this.jtDoanhThuLoaiPhong.getModel();
            model.getDataVector().removeAllElements();
            String[] tableColumnsName = {"STT","Mã Loại Phòng", "Tên Loại Phòng", "Tiền Phòng", "Tiền DV", "Doanh Thu", "Tỷ Lệ (%)"};
            model.setColumnIdentifiers(tableColumnsName);
            Vector dataRow;
            LoaiPhongControl lpc = (LoaiPhongControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/LoaiPhongControl");
            WebRowSet wrs1 = lpc.LoaiPhong_GetByAll();
            if(wrs1.size()>0)
            {
                while(wrs1.next())
                {
                    dataRow = new Vector();
                    dataRow.add(wrs1.getRow());
                    dataRow.add(wrs1.getString("MaLoaiPhong"));
                    dataRow.add(wrs1.getString("TenLoaiPhong"));
                    PhongControl pc = (PhongControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/PhongControl");
                    WebRowSet wrs2 = pc.Phong_Top("", " MaLoaiPhong = '" +wrs1.getString("MaLoaiPhong")+ "'", "");
                    if(wrs2.size()>0)
                    {
                        while(wrs2.next())
                        {
                            PhieuThueControl ptc = (PhieuThueControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/PhieuThueControl");
                            WebRowSet wrs3= ptc.PhieuThue_Top("", "MaPhong = '" +wrs2.getString("MaPhong")+ "'", "");
                            if(wrs3.size()>0)
                            {
                                while(wrs3.next())
                                {
                                    HoaDonControl hdc = (HoaDonControl)Naming.lookup("rmi://"+config.ServerIP.trim()+":"+config.ServerPort+"/HoaDonControl");
                                    WebRowSet wrs4 = hdc.HoaDon_Top("", "MaPhieuThue = '" +wrs3.getString("MaPhieuThue")+ "' AND year(NgayLap)= '" +String.valueOf(this.ycNam.getValue())+ "' AND month(NgayLap)= '" +String.valueOf(this.mcThang.getMonth()+1) + "'", "");
                                    if(wrs4.size()>0)
                                    {
                                        while(wrs4.next())
                                        {
                                            TongTien += Long.parseLong(wrs4.getString("TongTien").replace(".0000", "")); 
                                            TienDV += Long.parseLong(wrs4.getString("TienDV").replace(".0000", ""));
                                        }
                                    }
                                }
                            }
                        }
                    }
                    dataRow.add(this.TongTien - this.TienDV);
                    dataRow.add(this.TienDV);
                    dataRow.add(this.TongTien);
                    DecimalFormat df=new DecimalFormat("0.000");
                    df.setRoundingMode(RoundingMode.HALF_DOWN); 
                    dataRow.add(df.format(((double)this.TongTien/(double)this._TongTien)*100));
                    model.addRow(dataRow);
                    this.TongTien = 0;
                    this.TienDV = 0;
                }
            }
        }
        catch(Exception e)
        {
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formBaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formBaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formBaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formBaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new formBaoCao().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBCNam;
    private javax.swing.JButton btnBCThang;
    private javax.swing.JButton btnLapBaoCao;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jtDoanhThuLoaiPhong;
    private javax.swing.JLabel lbDoanhThu;
    private javax.swing.JLabel lbTienDV;
    private javax.swing.JLabel lbTienPhong;
    private com.toedter.calendar.JMonthChooser mcThang;
    private com.toedter.calendar.JYearChooser ycNam;
    // End of variables declaration//GEN-END:variables
}
